//verify cards are less than 21
//save each new card to database as it is generated
//ace- 1 or 11   if 11 can fit, it is 11
//not yet finished
//next person to see this must buy stones and yolo roll -jerry & alec

public class Gamestate
{
	int[] playerHand = HitStandSplit.playerHit();
	int[] dealerHand = HitStandSplit.dealerHit();


	public static int getPlayerTotal()
	{
		int playerTotal = 0;
		for(i = 0; i < playerHand.legnth - 1; i++)
		{
			playerTotal += playerHand[i];
		}
	return playerTotal;
	}


	public static int getDealerTotal()
	{
		int dealerTotal = 0;
		for(i = 0; i < dealerHand.legnth - 1; i++)
		{
			dealerTotal += dealerHand[i];
		}
	return dealerTotal;
	}


	public static boolean playerWins()
	{
		boolean win = false;
		if(int playerTotal > int dealerTotal && int playerTotal <= 21)
		{
			win = true
		}
	return win;
	}


	public static int[] ace()
	{

		/*int[] something = {
			5, 4, 1, 11
		};*/
		if(playerTotal > 21)
		{
			for(int i = 0; i <playerHand.length - 1; i++)
			{
				if(playerHand[i] == 11)
				{
					playerHand[i] = 1;
				}
			}
		}
	return playerHand;
	}
}
