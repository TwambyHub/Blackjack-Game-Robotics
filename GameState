//verify cards are less than 21
//save each new card to database as it is generated
//ace- 1 or 11   if 11 can fit, it is 11
//not yet finished
//next person to see this must buy stones and yolo roll -jerry & alec

import java.util.*;

public class Gamestate
{
	static List<Integer> playerHand = HitStandSplit.playerHit();
	static List<Integer> dealerHand = HitStandSplit.dealerHit();

	static int playerTotal = 0;

	public static int getPlayerTotal()
	{
		for(int i = 0; i < playerHand.size() - 1; i++)
		{
			playerTotal += playerHand.get(i);
		}
		System.out.println("Your total is " + playerTotal);
	return playerTotal;
	}

	static int dealerTotal = 0;

	public static int getDealerTotal()
	{
		for(int i = 0; i < dealerHand.size() - 1; i++)
		{
			dealerTotal += dealerHand.get(i);
		}
	return dealerTotal;
	}


	public static boolean playerWins()
	{
		boolean win = false;
		if(playerTotal > dealerTotal && playerTotal <= 21)
		{
			win = true;
		}
	return win;
	}


	public static List<Integer> ace()
	{

		/*int[] something = {
			5, 4, 1, 11
		};*/
		if(playerTotal > 21)
		{
			for(int i = 0; i < playerHand.size(); i++)
			{
				if(playerHand.get(i) == 11)
				{
					playerHand.set(i, 1);
				}
			}
		}
	return playerHand;
	}
}
